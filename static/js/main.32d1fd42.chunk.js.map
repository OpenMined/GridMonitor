{"version":3,"sources":["components/background-gradient/index.js","components/login/index.js","components/button/index.js","components/input/index.js","components/brand/index.js","routes/Connect/index.js","actions/monitor.js","actions/types.js","routes/Dashboard/Tabs/Overview.js","routes/Dashboard/Tabs/Datasets.js","routes/Dashboard/Tabs/Models.js","routes/Dashboard/index.js","App.js","reducers/networkReducer.js","reducers/index.js","index.js"],"names":["BackgroundGradient","className","Card","children","Button","size","color","status","expanded","centered","otherProps","classes","cn","Input","label","value","setValue","onChange","e","target","type","Brand","connect","state","network","setAddress","url","dispatch","localStorage","setItem","payload","useState","setUrl","toDashboard","setToDashboard","useEffect","address","to","onSubmit","event","preventDefault","placeholder","disabled","Overview","Datasets","Models","tryAutoConnect","getItem","basename","exact","path","INITIAL_STATE","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32d1fd42.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./background-gradient.css\";\n\nconst BackgroundGradient = ({ className }) => {\n  return <div className=\"background-gradient\" />;\n};\n\nexport default BackgroundGradient;\n","import React from \"react\";\nimport \"./card.css\";\n\nconst Card = ({ children }) => {\n  return <div className=\"card\">{children}</div>;\n};\n\nexport default Card;\n","import * as React from \"react\";\nimport cn from \"classnames\";\nimport \"./button.css\";\n\nconst Button = ({\n  children,\n  size = \"medium\",\n  color = \"black\",\n  status,\n  expanded = false,\n  centered = false,\n  className,\n  ...otherProps\n}) => {\n  const classes = cn(\"button\", className, size, color, status, {\n    expanded,\n    centered\n  });\n\n  return (\n    <button className={classes} {...otherProps}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport cn from \"classnames\";\nimport \"./input.css\";\n\nconst Input = ({\n  children,\n  size = \"medium\",\n  status,\n  label,\n  expanded = false,\n  centered = false,\n  className,\n  value,\n  setValue,\n  ...otherProps\n}) => {\n  const classes = cn(\"input\", className, size, status, {\n    expanded,\n    centered\n  });\n\n  return (\n    <>\n      <label className=\"input-label\">{label}</label>\n      <input\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        type=\"text\"\n        className={classes}\n        {...otherProps}\n      >\n        {children}\n      </input>\n    </>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport \"./brand.css\";\n\nconst Brand = () => {\n  return (\n    <div className=\"brand\">\n      <div className=\"pygrid-logo\" />\n      <h3 className=\"title\">PyGrid</h3>\n    </div>\n  );\n};\n\nexport default Brand;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport BackgroundGradient from \"../../components/background-gradient\";\nimport Card from \"../../components/login\";\nimport Button from \"../../components/button\";\nimport Input from \"../../components/input\";\nimport Brand from \"../../components/brand\";\nimport { setAddress } from \"../../actions/monitor\";\n\nimport \"./Connect.css\";\n\nconst mapStateToProps = state => {\n  return {\n    network: state.network\n  };\n};\n\nconst Connect = ({ setAddress, network }) => {\n  const [url, setUrl] = useState(network.url ? network.url : \"\");\n  const [toDashboard, setToDashboard] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    setAddress(url);\n    setToDashboard(true);\n  };\n\n  useEffect(() => {\n    if (network.address) setToDashboard(true);\n  }, [setToDashboard, network.address])\n\n  return (\n    <div className=\"connect\">\n      {toDashboard && <Redirect to=\"dashboard\" />}\n      <BackgroundGradient />\n      <Card>\n        <Brand />\n        <form onSubmit={handleSubmit}>\n          <Input\n            placeholder=\"http://127.0.0.1\"\n            label=\"Network Address\"\n            value={url}\n            setValue={setUrl}\n            expanded\n            centered\n          ></Input>\n          <Button disabled={!url} type=\"submit\" color=\"black\" centered expanded>\n            CONNECT\n          </Button>\n        </form>\n      </Card>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, { setAddress })(Connect);\n","import { SET_ADDRESS } from \"./types\";\n\nexport const setAddress = url => dispatch => {\n  localStorage.setItem(\"network_address\", url);\n  dispatch({\n    type: SET_ADDRESS,\n    payload: url\n  });\n};\n\nexport const tryAutoConnect = () => dispatch => {\n  const url = localStorage.getItem(\"network_address\");\n\n  dispatch({\n    type: SET_ADDRESS,\n    payload: url\n  });\n\n  return url ? true : false;\n};\n","/* Monitor Preferences */\nexport const SET_ADDRESS = \"SET_ADDRESS\";\n\n/* Network data */\nexport const FETCH_NODE = \"FETCH_NODE\";\nexport const FETCH_NODES = \"FETCH_NODES\";\nexport const FETCH_MODELS = \"FETCH_MODELS\";\nexport const FETCH_DATASETS = \"FETCH_DATASETS\";\n","import React from \"react\";\n\nconst Overview = () => {\n  return (\n    <div className='tab'>\n\n      <h3 className='title'>Overview</h3>\n\n      <div className='table'>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Overview;\n","import React from \"react\";\nimport '../Dashboard.css';\n\nconst Datasets = () => {\n  return (\n    <div className='tab'>\n\n      <h3 className='title'>Datasets</h3>\n\n      <div className='table'>\n        <p>oi</p>\n      </div>\n\n    </div>  );\n};\n\nexport default Datasets;\n","import React from \"react\";\n\nconst Models = () => {\n  return (\n    <div className='tab'>\n\n      <h3 className='title'>Models</h3>\n\n      <div className='table'>\n        <p>oi</p>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Models;\n","import React from \"react\";\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nimport BackgroundGradient from \"../../components/background-gradient\";\nimport Card from \"../../components/login\";\n\nimport { connect } from \"react-redux\";\n\nimport \"./Dashboard.css\";\nimport { Overview, Datasets, Models } from \"./Tabs\";\n\nconst mapStateToProps = state => {\n  return {\n    network: state.network\n  };\n};\n\nconst Dashboard = ({ network }) => {\n  return (\n    <Tabs>\n      <div className=\"dashboard\">\n        <BackgroundGradient />\n        <Card>\n          <div className=\"header\">\n            <div className=\"brand\">\n              <div className=\"pygrid-icon\" />\n              <span>\n                PyGrid Monitor - <code>{network.address}</code>{\" \"}\n              </span>\n            </div>\n            <TabList className='tabs'>\n              <Tab>OVERVIEW</Tab>\n              <Tab>DATASETS</Tab>\n              <Tab>MODELS</Tab>\n            </TabList>\n          </div>\n          <TabPanel>\n            <Overview />\n          </TabPanel>\n          <TabPanel>\n            <Datasets />\n          </TabPanel>\n          <TabPanel>\n            <Models />\n          </TabPanel>\n        </Card>\n      </div>\n    </Tabs>\n  );\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Connect from \"./routes/Connect\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Dashboard from \"./routes/Dashboard\";\nimport { tryAutoConnect } from \"./actions/monitor\";\n\nconst App = ({ tryAutoConnect }) => {\n\n  useEffect(() => {\n    tryAutoConnect();\n  }, [tryAutoConnect]);\n\n  return (\n    <Router basename=\"/GridMonitor\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Connect />\n        </Route>\n        <Route exact path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default connect(null, { tryAutoConnect })(App);\n","import { SET_ADDRESS } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  address: \"\"\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_ADDRESS:\n      return { ...state, address: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport networkReducer from \"./networkReducer\";\n\nexport default combineReducers({\n  network: networkReducer\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}